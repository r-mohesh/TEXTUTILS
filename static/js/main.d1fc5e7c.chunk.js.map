{"version":3,"sources":["Navbar.js","TextForm.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","Alert","alert","role","word","loewr","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d1fc5e7c.chunk.js","sourcesContent":["import React from 'react'\r\n// import { a } from 'react-router-dom'\r\n// import { BrowserRouter as Router } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n\r\n        <div className=\"container-fluid\">\r\n          {/* <Router> */}\r\n            <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-a active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                  <a className=\"nav-a\" to=\"/about\">About</a>\r\n                </li> */}\r\n              </ul>\r\n              {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            </div>\r\n          {/* </Router> */}\r\n          <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        //console.log(\"uppercase was clicked\" +text);\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"converted to upperCase\",\"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        //console.log(\"uppercase was clicked\" +text);\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"converted to lowerCase\",\"success\");\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"copied\",\"success\");\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newtext = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"))\r\n        props.showAlert(\"No extra space \",\"success\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        //console.log(\"onchange\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState();\r\n    return (\r\n        <div className=\"container\" style={{color: props.mode === \"dark\" ? \"white\" : \"#255fca\"}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"#255fca\" }} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>convert top upercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>convert top lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>copy the entire trext</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>minimize the extra space</button>\r\n            <div className=\"conatiner my-3\" style={{color: props.mode === \"dark\" ? \"white\" : \"#255fca\"}}>\r\n                <h1>Your Text summary</h1>\r\n                {/* <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.08*text.split(\" \").length} minutes to read</p> */}\r\n                <h2>priview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const loewr=word.toLowerCase();\r\n        return loewr.charAt(0).toUpperCase() + loewr.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg} \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './Navbar';\nimport TextForm from './TextForm';\n// import About from './About';\nimport React, { useState } from 'react'\nimport Alert from './Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#255fca';\n      showAlert(\"dark mode is enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode is enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"textUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text you anlyze\" mode={mode} />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n      {/* <About/> */}\n\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}